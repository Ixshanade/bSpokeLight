hackage:
  {
    packages = {
      "semigroupoids".revision = (((hackage."semigroupoids")."5.3.2").revisions).default;
      "semigroupoids".flags.comonad = true;
      "semigroupoids".flags.doctests = true;
      "semigroupoids".flags.unordered-containers = true;
      "semigroupoids".flags.distributive = true;
      "semigroupoids".flags.tagged = true;
      "semigroupoids".flags.containers = true;
      "semigroupoids".flags.contravariant = true;
      "free".revision = (((hackage."free")."5.1.1").revisions).default;
      "exceptions".revision = (((hackage."exceptions")."0.10.2").revisions).default;
      "binary".revision = (((hackage."binary")."0.8.6.0").revisions).default;
      "bitwise".revision = (((hackage."bitwise")."1.0.0.1").revisions).default;
      "ghc-prim".revision = (((hackage."ghc-prim")."0.5.3").revisions).default;
      "FontyFruity".revision = (((hackage."FontyFruity")."0.5.3.4").revisions).default;
      "bifunctors".revision = (((hackage."bifunctors")."5.5.4").revisions).default;
      "bifunctors".flags.semigroups = true;
      "bifunctors".flags.tagged = true;
      "split".revision = (((hackage."split")."0.2.3.3").revisions).default;
      "stm".revision = (((hackage."stm")."2.5.0.0").revisions).default;
      "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
      "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
      "regex-base".revision = (((hackage."regex-base")."0.93.2").revisions).default;
      "regex-base".flags.splitbase = true;
      "regex-base".flags.newbase = true;
      "zlib".revision = (((hackage."zlib")."0.6.2").revisions).default;
      "zlib".flags.non-blocking-ffi = false;
      "zlib".flags.pkg-config = false;
      "rts".revision = (((hackage."rts")."1.0").revisions).default;
      "regex-posix".revision = (((hackage."regex-posix")."0.95.2").revisions).default;
      "regex-posix".flags.splitbase = true;
      "regex-posix".flags.newbase = true;
      "distributive".revision = (((hackage."distributive")."0.6").revisions).default;
      "distributive".flags.semigroups = true;
      "distributive".flags.tagged = true;
      "deepseq".revision = (((hackage."deepseq")."1.4.4.0").revisions).default;
      "optparse-applicative".revision = (((hackage."optparse-applicative")."0.14.3.0").revisions).default;
      "dlist".revision = (((hackage."dlist")."0.8.0.6").revisions).default;
      "parsec".revision = (((hackage."parsec")."3.1.13.0").revisions).default;
      "directory".revision = (((hackage."directory")."1.3.3.0").revisions).default;
      "transformers-compat".revision = (((hackage."transformers-compat")."0.6.5").revisions).default;
      "transformers-compat".flags.five = false;
      "transformers-compat".flags.generic-deriving = true;
      "transformers-compat".flags.two = false;
      "transformers-compat".flags.five-three = true;
      "transformers-compat".flags.mtl = true;
      "transformers-compat".flags.four = false;
      "transformers-compat".flags.three = false;
      "template-haskell".revision = (((hackage."template-haskell")."2.14.0.0").revisions).default;
      "vector".revision = (((hackage."vector")."0.12.0.3").revisions).default;
      "vector".flags.unsafechecks = false;
      "vector".flags.internalchecks = false;
      "vector".flags.wall = false;
      "vector".flags.boundschecks = true;
      "primitive".revision = (((hackage."primitive")."0.7.0.0").revisions).default;
      "profunctors".revision = (((hackage."profunctors")."5.4").revisions).default;
      "ansi-terminal".revision = (((hackage."ansi-terminal")."0.9.1").revisions).default;
      "ansi-terminal".flags.example = false;
      "tagged".revision = (((hackage."tagged")."0.8.6").revisions).default;
      "tagged".flags.transformers = true;
      "tagged".flags.deepseq = true;
      "containers".revision = (((hackage."containers")."0.6.0.1").revisions).default;
      "bytestring".revision = (((hackage."bytestring")."0.10.8.2").revisions).default;
      "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
      "ansi-wl-pprint".flags.example = false;
      "JuicyPixels".revision = (((hackage."JuicyPixels")."3.3.3").revisions).default;
      "JuicyPixels".flags.mmap = false;
      "StateVar".revision = (((hackage."StateVar")."1.1.1.1").revisions).default;
      "contravariant".revision = (((hackage."contravariant")."1.5.1").revisions).default;
      "contravariant".flags.semigroups = true;
      "contravariant".flags.tagged = true;
      "contravariant".flags.statevar = true;
      "text".revision = (((hackage."text")."1.2.3.1").revisions).default;
      "Cabal".revision = (((hackage."Cabal")."2.4.0.1").revisions).default;
      "unordered-containers".revision = (((hackage."unordered-containers")."0.2.10.0").revisions).default;
      "unordered-containers".flags.debug = false;
      "base".revision = (((hackage."base")."4.12.0.0").revisions).default;
      "comonad".revision = (((hackage."comonad")."5.0.5").revisions).default;
      "comonad".flags.distributive = true;
      "comonad".flags.test-doctests = true;
      "comonad".flags.containers = true;
      "time".revision = (((hackage."time")."1.8.0.2").revisions).default;
      "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.1").revisions).default;
      "vector-algorithms".flags.unsafechecks = false;
      "vector-algorithms".flags.internalchecks = false;
      "vector-algorithms".flags.llvm = false;
      "vector-algorithms".flags.boundschecks = true;
      "vector-algorithms".flags.bench = true;
      "vector-algorithms".flags.properties = true;
      "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
      "hashable".revision = (((hackage."hashable")."1.2.7.0").revisions).default;
      "hashable".flags.sse2 = true;
      "hashable".flags.integer-gmp = true;
      "hashable".flags.sse41 = false;
      "hashable".flags.examples = false;
      "colour".revision = (((hackage."colour")."2.3.5").revisions).default;
      "transformers-base".revision = (((hackage."transformers-base")."0.4.5.2").revisions).default;
      "transformers-base".flags.orphaninstances = true;
      "file-embed".revision = (((hackage."file-embed")."0.0.11").revisions).default;
      "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
      "process".revision = (((hackage."process")."1.6.5.1").revisions).default;
      "Rasterific".revision = (((hackage."Rasterific")."0.7.4.2").revisions).default;
      "Rasterific".flags.embed_linear = true;
      "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
      "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.6").revisions).default;
      "ghc-boot-th".revision = (((hackage."ghc-boot-th")."8.6.3").revisions).default;
      "base-orphans".revision = (((hackage."base-orphans")."0.8.1").revisions).default;
      "th-abstraction".revision = (((hackage."th-abstraction")."0.3.1.0").revisions).default;
      "array".revision = (((hackage."array")."0.5.3.0").revisions).default;
      "xml".revision = (((hackage."xml")."1.3.14").revisions).default;
      "integer-gmp".revision = (((hackage."integer-gmp")."1.0.2.0").revisions).default;
      };
    compiler = {
      version = "8.6.3";
      nix-name = "ghc863";
      packages = {
        "binary" = "0.8.6.0";
        "ghc-prim" = "0.5.3";
        "stm" = "2.5.0.0";
        "unix" = "2.7.2.2";
        "mtl" = "2.2.2";
        "rts" = "1.0";
        "deepseq" = "1.4.4.0";
        "parsec" = "3.1.13.0";
        "directory" = "1.3.3.0";
        "template-haskell" = "2.14.0.0";
        "containers" = "0.6.0.1";
        "bytestring" = "0.10.8.2";
        "text" = "1.2.3.1";
        "Cabal" = "2.4.0.1";
        "base" = "4.12.0.0";
        "time" = "1.8.0.2";
        "transformers" = "0.5.5.0";
        "filepath" = "1.4.2.1";
        "process" = "1.6.3.0";
        "pretty" = "1.1.3.6";
        "ghc-boot-th" = "8.6.3";
        "array" = "0.5.3.0";
        "integer-gmp" = "1.0.2.0";
        };
      };
    }
